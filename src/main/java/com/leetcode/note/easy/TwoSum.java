package com.leetcode.note.easy;

import java.util.HashMap;
import java.util.Map;

/**
 * Created by huzhengying on 2019/3/14.
 *
 * 给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。
 * 可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。
    示例:

        给定 nums = [2, 7, 11, 15], target = 9
        因为 nums[0] + nums[1] = 2 + 7 = 9
        所以返回 [0, 1]
 */
public class TwoSum {
    public static void main(String[] args) {
        int[] nums = { 7,9,11,15};
        for(int i : twoSum(nums,2)){
            System.out.println(i);
        }
    }

    public static int[] twoSum(int[] nums, int target) {
        Map<Integer,Integer> numMap = new HashMap<>();
        for (int i = 0;i < nums.length; i++) {
            int targetNum = target - nums[i];
            if (numMap.containsKey(targetNum)) {
                return new int[]{numMap.get(targetNum), i};
            }
            numMap.put(nums[i], i);
        }
        return null;
    }
}
